本实验将使我们更加熟悉HTML标签，以及如何将其组合以构建网页。

请下载 http://yishuai.github.io/wdd/wdd-lab1.zip， 里面有本实验需要的图片和解答。

您需要下载安装专为编写代码而设计的文本编辑器。我们建议使用Visual Studio Code，但是您可以在本课程中使用喜欢的任何编辑器，比如Sublime Text。

您也需要一个网络浏览器，我们将使用它来查看和测试我们的网页。您可以使用任何浏览器，但是我们建议您使用Google Chrome，因为它具有丰富的工具（“ DevTools”），可以在我们测试设计时实时显示和调整代码。

我们下面将学习制作一个民宿公司网站的HTML框架！

第1部分：设置结构

我们将从下面显示的这些HTML基础标签开始。

让我们分别了解一下这些标签的作用（或浏览器如何解释它们）。

<!doctype html>
<html>
    <head>
        <!-- 文档标签! -->
    </head>
    <body>
        <!-- 内容! -->
    </body>
</html>

<!doctype html>告诉浏览器这是什么类型的文档。在这里，它知道这是一个HTML 5文档。

<html>标签包括整个文档。除了文档声明外，文档所有其他标签都将在放在该标签的内部。

<head>标签存储你的HTML文档可以使用的信息，比如链接的特定资源文件，网页的标题或作者。这些内容都不会显示在网页上 - 用户无法看到它，但这是一种向计算机指示页面元数据的好方法。

<body>标签包括网页的内容！您在网页上看到的所有元素都来自这里。

任何带有<!--和-->的文字均为注释。浏览器将忽略它们；您可以使用它们给自己留下一些注释，说明如何编写代码的一部分或代码的功能，需要对网页进行的更改，等等。

请注意</sometag> 中的关闭标签（内斜线）和嵌套结构（标签内的标签，请进行缩进，以使结构更易于阅读）！这些告诉您的浏览器如何正确阅读HTML代码。

请在starter文件夹中创建一个新文件index.html。然后，复制上方的入门HTML代码到该文件中。

第2部分：创建内容

现在，我们将创建网页内容！

我们的框架包括下面几部分内容，每个部分都采用相同的结构，包括标题和描述，但内容不同。

让我们创建第一部分：
<section>
        <img src="cover-1.png" />
        <figcaption>1000多个体验</figcaption>
       
        <!-- 二级标题 -->
        <h2>冲浪经验</h2>
        <p>
             好爽！       
        </p>
 </section>

 我们在本节中使用一些最常见的标签：

 <section> 是一个语义标记，代表网页的不同部分。

 <img>显示图像，其文件名在src指定。

 <h2>是第二个最突出的标题。标题的大小范围为1到6；只需更改h旁边的数字即可使用其他层次结构的标题。例如，<h1>最大，<h6>最小。

 <p>标签包含一段文本。即使您将文本放在<p>标签的多行中，它们也会全部显示在一个段落中。

 了解这些标签后，将以上结构添加到<body>中。

 继续创建另外2个像这样的部分！我们提供了图像cover-1.png，cover-2.png以及cover-3.png在starter文件夹中供您使用。

 要查看您的网页，请在电脑中找到您的index.html文件，然后在浏览器中打开它（双击文件）

 成功秘诀：

 1）考虑网页上不同元素（页眉，图像，段落，引号）的父子关系。网站的不同部分之间的父子关系如何使您更容易理解？

 2）添加注释 <!-- comment tags -->。

 第3部分：创建标题

 <header>与<head>不同（尽管名称相似）。实际上，<header>属于<body>！

 <header> 是一个语义HTML标记，用于页面最上方的标题，搜索栏和一些用户信息。

 我们将使用以下结构创建我们的页面骨架：
 <header>
        <!-- 搜索框 -->
        <img src="logo.png" />
        <input type="search" />
        <!-- 导航块（链接到其他页面），也具有语义! -->
        <nav>
                <!-- 这是指向“成为房东”页面的链接 -->
                <a href="become-host">成为房东</a>
                <a href="starred">星标房东</a>
                <a href="trips">行程</a>
                <a href="help">帮助</a>
        </nav>
        <!-- 另一个链接，指向“帐户”页面 -->
        <a href="account">
                <!-- 我们可以将图像放在链接中，这样图片也可以点 -->
                <img src="avatar.png" />
        </a>
                <!-- 不要忘记标题的结束标签！ -->
</header>

在此<header>中，我们使用了几个新标签：

<input>是从用户收集信息的一种方式。有许多不同的输入type，例如按钮（button），复选框（checkbox），文本区域（textarea）。我们这里为搜索（search）栏。

<nav> 是一个语义标记，用于创建导航，导航到网站上的其他页面。

<a>是一个锚点（anchor）标记，它充当到另一个网页或您正在处理的网页的另一部分的链接。当您单击链接时，它将转到设置为href值的页面或URL。

在你的index.html 添加上面的代码。在浏览器中打开它，看它的效果。

你完成了！恭喜您完成了第一个实验。

请修改你的网页的内容，变成你想要的网页吧。请提交网页的Github链接。

注释：保持相同结构/外观但内容或数据不同的元素通常称为组件。基于组件的架构超出了本学期的范围，但是如果您好奇的话，可以研究React，Angular或Vue －或询问如何在jQuery中创建基于组件的架构，我们将在后面讨论。如果您想长期学习更多，我们后面会学习React：

有许多其他方式可以查看页面，比在浏览器中不断重新加载页面要方便得多。对于使用Visual Studio Code作为文本编辑器的用户，可以安装名为 HTML Preview的扩展。

当您准备好查看页面时，可以在编辑HTML文件的同时在文本编辑器内部单击鼠标右键，然后选择vscode-preview-server: Launch on browser。您的页面将在浏览器中打开，一个名为Browsersync的程序将在您编辑HTML和CSS代码时不断更新页面预览，而无需重新加载！